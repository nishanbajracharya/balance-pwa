{"version":3,"sources":["reducers/expense.js","reducers/index.js","store.js","assets/images/back.svg","assets/images/sync.svg","views/appbar.js","components/button.js","components/card.js","views/swipeableView.js","components/expenseItem.js","views/main.js","app.js","serviceWorker.js","index.js"],"names":["INITIAL_STATE","data","1","value","title","date","list","expense","arguments","length","undefined","combineReducers","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","_extends","Object","assign","target","i","source","prototype","hasOwnProperty","call","apply","this","back_ref","react_default","a","createElement","d","back_SvgComponent","props","viewBox","__webpack_require__","p","sync_extends","sync_ref","sync_SvgComponent","Appbar","_ref","_ref$title","className","Button","label","primary","secondary","classnames","Card","_ref$value","_ref$className","numeral","format","VirtualizeSwipeableViews","virtualize","SwipeableViews","slideRenderer","params","index","mod","card","SwipeableView","ExpenseItem","connect","state","_ref$expense","appbar","swipeableView","map","id","expenseItem","components_button","App","es","integration_react","loading","main","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","app","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ea86088c.chunk.js","sourcesContent":["const INITIAL_STATE = {\n  data: {\n    1: {\n      value: 750,\n      title: 'Restaurant - Ginza',\n      date: '2018-02-05T11:00:00Z'\n    }\n  },\n  list: [1, 1, 1, 1, 1]\n};\n\nconst expense = (state = INITIAL_STATE) => state;\n\nexport default expense;\n","import { combineReducers } from 'redux';\n\nimport expense from './expense';\n\nexport default combineReducers({\n  expense\n});\n","import { createStore } from 'redux';\nimport storage from 'redux-persist/lib/storage';\nimport { persistStore, persistReducer } from 'redux-persist';\n\nimport rootReducer from './reducers'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = createStore(persistedReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nexport const persistor = persistStore(store);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M217.9 256L345 129c9.4-9.4 9.4-24.6 0-33.9-9.4-9.4-24.6-9.3-34 0L167 239c-9.1 9.1-9.3 23.7-.7 33.1L310.9 417c4.7 4.7 10.9 7 17 7s12.3-2.3 17-7c9.4-9.4 9.4-24.6 0-33.9L217.9 256z\"\n});\n\nvar SvgComponent = function SvgComponent(props) {\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 512 512\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/media/back.bcd47f6d.svg\";\nexport { SvgComponent as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M492 257.1c-2.6-2.6-6-4-9.6-4-3.6 0-7 1.4-9.6 4l-13 13c4.3-61.8-19.5-122.5-65.3-165C356.9 70.2 307.7 51 256.1 51c-26.7 0-52.8 5.1-77.4 15.1-25.5 10.4-48.3 25.6-67.7 45.3-13.2 13.4-24.6 28.5-33.6 44.8-1.9 3.4-2.3 7.4-1.2 11.1 1.1 3.7 3.8 6.8 7.2 8.5 2 1 4.2 1.5 6.4 1.5 5.2 0 9.9-2.8 12.4-7.3 7.9-14.3 17.8-27.5 29.4-39.1 16.8-16.8 36.3-29.8 58.1-38.7 21.1-8.6 43.4-12.9 66.2-12.9 22.9 0 45.2 4.3 66.3 12.9 21.8 8.9 41.4 21.9 58.2 38.8 20.3 20.4 35.4 45.6 43.8 73 7 22.9 9.2 47.3 6.6 71.2l-18.9-18.5c-2.5-2.4-5.8-3.8-9.3-3.8-3.5 0-6.9 1.4-9.4 3.9-5.2 5.2-5.2 13.6 0 18.8l42.8 42.9c1.9 1.9 4.4 2.9 7 2.9 2.6 0 5.1-1 7-2.9l42.1-42.2c5.2-5.3 5.2-13.9-.1-19.2zM428.6 335.9c-2-1-4.2-1.5-6.4-1.5-5.2 0-9.9 2.8-12.4 7.3-7.9 14.3-17.8 27.5-29.4 39.1-16.8 16.8-36.3 29.9-58.2 38.7-21.1 8.6-43.4 12.9-66.3 12.9s-45.2-4.3-66.2-12.9c-21.8-8.9-41.4-21.9-58.2-38.7-37.6-37.8-56-90.9-50.3-143.9l18.4 18.5c2.4 2.4 5.6 3.7 9 3.7 3.4 0 6.6-1.3 9-3.7l1.3-1.3c4.9-4.9 4.9-13 0-17.9l-42.9-43c-1.9-1.9-4.4-2.9-7-2.9-2.6 0-5.1 1-7 2.9l-42 42.3c-5.3 5.3-5.3 13.9 0 19.2 2.6 2.6 6 4 9.6 4 3.6 0 7-1.4 9.6-4l13-13.1c-1.8 25.8 1.3 52 9 76.5 9.9 31.4 26.8 59.3 50.3 82.8 19.5 19.6 42.2 34.7 67.6 45.1 24.5 10 50.4 15 76.9 15 26.5 0 52.4-5.1 76.9-15 25.4-10.3 48.1-25.5 67.6-45.1 13.5-13.5 25-28.8 34.2-45.4 1.9-3.4 2.3-7.4 1.2-11.1-1.2-3.7-3.8-6.8-7.3-8.5z\"\n});\n\nvar SvgComponent = function SvgComponent(props) {\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 512 512\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/media/sync.4a9165a2.svg\";\nexport { SvgComponent as ReactComponent };","import React from 'react';\n\nimport { ReactComponent as Back } from '../assets/images/back.svg';\nimport { ReactComponent as Sync } from '../assets/images/sync.svg';\n\nconst Appbar = ({\n  title = 'Balance'\n}) => <div className=\"appbar\">\n  <Back />\n  <p className=\"app-title\">{title}</p>\n  <Sync />\n</div>;\n\nexport default Appbar;\n","import React from 'react';\nimport classnames from 'classnames';\n\nconst Button = ({\n  label,\n  primary,\n  secondary\n}) => <button className={\n  classnames('button', {\n    primary,\n    secondary\n  })\n}>{label}</button>;\n\nexport default Button;\n","import React from 'react';\nimport numeral from 'numeral';\nimport classnames from 'classnames';\n\nconst Card = ({\n  value = 0,\n  className = '',\n  title = 'Balance',\n}) => <div className={classnames('card', className)}>\n  <p className=\"card-title\">{title}</p>\n  <p className=\"card-value\">Rs {numeral(value).format('0,0')}</p>\n</div>;\n\nexport default Card;\n","import React from 'react';\nimport { mod } from 'react-swipeable-views-core';\nimport SwipeableViews from 'react-swipeable-views';\nimport { virtualize } from 'react-swipeable-views-utils';\n\nimport Card from '../components/card';\n\nconst VirtualizeSwipeableViews = virtualize(SwipeableViews);\n\nfunction slideRenderer(params) {\n  const { index, key } = params;\n\n  switch (mod(index, 3)) {\n    case 0:\n      return <Card key={key} title=\"Balance\" value={100000} className=\"balance\" />;\n    case 1:\n      return <Card key={key} title=\"Expenses\" value={100000} className=\"expenses\" />;\n    case 2:\n      return <Card key={key} title=\"Initial\" value={100000} className=\"initial\" />;\n    default:\n      return null;\n  }\n}\n\nconst SwipeableView = () => <VirtualizeSwipeableViews className=\"card-swipe\" slideRenderer={slideRenderer} />\n\nexport default SwipeableView;\n","import React from 'react';\nimport numeral from 'numeral';\n\nconst ExpenseItem = ({\n  title = '',\n  value = ''\n}) => <li className=\"expense-item\">\n  <span className=\"expense-title\">{title}</span>\n  <span className=\"expense-value\">Rs {numeral(value).format('0,0')}</span>\n</li>;\n\nexport default ExpenseItem;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Appbar from './appbar';\nimport Button from '../components/button';\nimport SwipeableView from './swipeableView';\nimport ExpenseItem from '../components/expenseItem';\n\nconst Main = ({\n  expense = {}\n}) => <div>\n  <Appbar />\n  <SwipeableView />\n  <p className=\"expense-section-title\">Recent Expenses</p>\n  <ul className=\"expense-section\">\n    {\n      expense.list.map((id, key) => <ExpenseItem key={key} title={expense.data[id].title} value={expense.data[id].value} />)\n    }\n  </ul>\n  <p className=\"expense-section-more\">more</p>\n  <div className=\"button-container\">\n    <Button label=\"Add Expense\" primary/>\n    <Button label=\"Add Balance\" secondary/>\n  </div>\n</div>;\n\nexport default connect(state => ({\n  expense: state.expense\n}))(Main);\n","import { Provider } from 'react-redux';\nimport React, { Component } from 'react';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport { store, persistor } from './store';\n\nimport Main from './views/main';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <Main />\n        </PersistGate>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app';\n\nimport './styles';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}